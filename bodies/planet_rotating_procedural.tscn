[gd_scene load_steps=17 format=2]

[ext_resource path="res://assets/planets/biome_gradient.tres" type="Gradient" id=1]
[ext_resource path="res://bodies/planet.gd" type="Script" id=2]
[ext_resource path="res://assets/bodies/texture_template.png" type="Texture" id=3]
[ext_resource path="res://assets/Planet-shadow_only.png" type="Texture" id=4]
[ext_resource path="res://assets/planets/temp_gradient.tres" type="Gradient" id=5]
[ext_resource path="res://assets/planets/seamless_shader_better.tres" type="Shader" id=6]

[sub_resource type="GradientTexture" id=5]
gradient = ExtResource( 1 )

[sub_resource type="GradientTexture" id=4]
gradient = ExtResource( 5 )

[sub_resource type="ShaderMaterial" id=6]
resource_local_to_scene = true
shader = ExtResource( 6 )
shader_param/fadeWidth = 0.05
shader_param/temperature = -179.054
shader_param/rotate_angle = null
shader_param/time = 1.51563
shader_param/waterLevel = 0.45
shader_param/color_sea = Color( 0, 1, 1, 1 )
shader_param/temp_gradient = SubResource( 4 )
shader_param/land_gradient = SubResource( 5 )
shader_param/vectors = ExtResource( 3 )

[sub_resource type="OpenSimplexNoise" id=2]
octaves = 2
period = 24.0

[sub_resource type="NoiseTexture" id=7]
width = 256
height = 256
noise = SubResource( 2 )

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 aura_color : hint_color;

void fragment()
{
	vec4 col = texture(TEXTURE, UV);
	
	if (col.a > 0.08 && col.r > 0.1)
	{
		COLOR.rgba = vec4(aura_color.rgb, col.a);
	}
	else
	{
		COLOR.rgba = col.rgba; //+ vec3(1,0,0);
	}
	//COLOR.rgb = vec3(1,0,0);
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 1 )
shader_param/aura_color = Color( 1, 0.706604, 0.0117188, 1 )

[sub_resource type="CircleShape2D" id=3]
radius = 150.0

[sub_resource type="StyleBoxFlat" id=9]

[sub_resource type="Animation" id=10]
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite_shadow:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.5, 0.7, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ true, false, false, false, true ]
}

[node name="Node2D" type="Node2D" groups=["planets"]]
z_index = 2
script = ExtResource( 2 )
mass = 1

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 6 )
texture = SubResource( 7 )

[node name="Sprite_shadow" type="Sprite" parent="."]
material = SubResource( 8 )
scale = Vector2( 0.43, 0.43 )
texture = ExtResource( 4 )

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
visible = false
shape = SubResource( 3 )

[node name="Label" type="Label" parent="."]
margin_left = 150.0
margin_top = 150.0
margin_right = 202.0
margin_bottom = 164.0
custom_colors/font_color = Color( 0, 0, 0, 1 )
custom_styles/normal = SubResource( 9 )
text = "Emerald"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="orbit_holder" type="Node2D" parent="."]

[node name="pop_timer" type="Timer" parent="."]
wait_time = 10.0
autostart = true

[node name="module_timer" type="Timer" parent="."]
wait_time = 20.0
autostart = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/scanning = SubResource( 10 )

[connection signal="area_entered" from="Area2D" to="." method="_on_Area2D_area_entered"]
[connection signal="area_exited" from="Area2D" to="." method="_on_Area2D_area_exited"]
[connection signal="input_event" from="Area2D" to="." method="_on_Area2D_input_event"]
[connection signal="timeout" from="pop_timer" to="." method="_on_pop_timer_timeout"]
[connection signal="timeout" from="module_timer" to="." method="_on_module_timer_timeout"]
